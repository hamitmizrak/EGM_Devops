git init
git status
git add .
git commit -m "1.commit"
git log
git branch -M main
git remote add origin1 https://github.com/hamitmizrak/EGM_Devops.git
git remote
git push -u origin1 master

git add .
git commit -m "2.commit"
git push

git commit -a -m "3.commit"
git push

-------------------------------------------------------------------------
GUI:
gitk

-------------------------------------------------------------------------
git remote 
git remote -v 
https://github.com/hamitmizrak/EGM_Devops.git

-------------------------------------------------------------------------
git --help
git tag --help 
-------------------------------------------------------------------------
git config --global user.name
git config --global user.name "Hamit Mizrak"
git config --global user.email
git config --global user.email "hamitmizrak@gmail.com"
git config --global color.ui true
git config --global core.editor notepad++
git config --global --list
git config --global -l
git config --list
git config  -l
git config --global --edit 
git config --global -e

-------------------------------------------------------------------------
ssh-keygen -t rsa -b 4096 -C "hamitmizrak@gmail"
cat ~/..ssh/id_rsa.pub 
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDA8V19xDZYWcQjIVvb5GxZW7w0y38ysHliTgNgCYYsX4KYcvNpuqNy0OFMYvBVdQWDCy8ugVRvkHi233sPJZ75Vm5WCmz1le6O/qQQGO8+xc7pO8IPmHeU3mgNSgCLavum1yzpPs3hDbQoUr2U9lLYKtRVaknGBPbMlWJGWSNi0c3E+ft0UdRcedQyorn/d4UwRJPkS4Q+nvx/oy2jSDq0NstzbXmkaH7yiy0+0wZ/fSWxPZ53owfO0xGg1+X9YFYpwI8LvLZezGy0AAFkj0901BPxMkFUcv9wNhVpw3nk1J/ui/K3S+IDZvjojqCWzRnlebqWfY0kGraB2cFuLRJBBub4vmLBAbyKcZwtHVkTd+VvhDPdJpl34LIG6oC/bmlsZIfyEHgA31O6pwoyub4F8DCi+NuD08svq5FF+/GOTH0topm59is1YwWvqwh0htKJxOg+k6C++L90EC7LqiBRApn/3xJKJ8U0KnZ+4+ZQsliIoaTKizqoVQZzixXcrU08rvCVt5yV2+rG5ypoJS+QYVXTDyc/1kHMrHkjyDJdMui1QUvb+BgFZUtS3FsapvtiU8CMzNANb3WFANrkxPgAyZqoc1wyp7EzjO8+RPPUHNdfjaAlngROVv4tPbiStd7umYeXk/kyUDPJ4nQS4W8UFVXFrkEdzF0KUpZDGzuMbQ== hamitmizrak@gmail.com

-------------------------------------------------------------------------
ADD 
git add git_tutorials.txt
git add *.txt 
git add git*.txt

-------------------------------------------------------------------------
SHOW 
git log 
git show commitID

-------------------------------------------------------------------------
LOG
git log
git log --decorate --oneline --graph --all  (DOGA)

-------------------------------------------------------------------------
PUSH 
git remote 
--set-upstream : u
git push -u origin1 master
git push -uf origin1 master

-------------------------------------------------------------------------
REMOTE 
git remote add origin1 URL 
git remote 
git remote -v 

-------------------------------------------------------------------------
CLONE 
git clone URL_ADDRESS

-------------------------------------------------------------------------
PULL 
git pull 

-------------------------------------------------------------------------
COMMIT 
git commit -m "commit mesajı"
git commit -a -m "add yapmadan commit yap"
git commit --amend -m "son committeki açıklama alanın içeriği değiştir"

-------------------------------------------------------------------------
DIFF : iki yapı arasındaki farklar
git log 
64774d5b5e6728f3feb6eeabe2622bc6d7dc4419
532e59bf78af9a39ba945d88e779616800267cfa
git diff commitID1 commitID2
git difftool 532e59bf78af9a39ba945d88e779616800267cfa 64774d5b5e6728f3feb6eeabe2622bc6d7dc4419


-------------------------------------------------------------------------
.gitignore: takip edilmesiini istemediğimizidosya evya dizinlerde
# Git untracted
secret.properties
node_modules/
*.mvi
*.log


-------------------------------------------------------------------------
ALIAS: uzun komutları kısatlmak için
git config --global -e
git config --global -l
git log --decorate --oneline --graph --all 
git config --global alias.log2 "log --decorate --oneline --graph --all"
git log2

-------------------------------------------------------------------------
STASH: commit yapmak istemiyorum ancak dosyalarımda kaybolması istemiyorum.
git add .
git stash 
git stash list
git stash save "my_stash_name"

git stash apply
git stash apply stash@{2}
git stash pop  =>  son stash çağır ve sil 

git stash drop stash@{3}

-------------------------------------------------------------------------
PULL (Bütün komutlar hemen getirir) -FETCH (Dosyalar gelir ancak bizim local projemize eklenmez):
git remote 
git fetch origin 
git fetch origin master
git fetch origin main

git branch -a ( Bütün local veya remote branchleri göster)
git branch -r (  remote branchleri göster)

git checkout remotes/origin/master ( Fetch gelen değeişikleri görmek)
git checkout master

git stash save "fetch_sonrası" 
git merge origin/master  (Fetch'ten gelen verileri kendi bilgisayarıma alıyor)

-------------------------------------------------------------------------
MAJOR MİNOR PATCH
V1.   0.     0
TAG
git add .
git commit -m "version 1 öncesi"

git tag --help 
git tag --list 
git tag -l 

cat >> tag1.txt 
git tag v1.0.0
git show v1.0.0
git remote 
origin1
git push origin1 v1.0.0

cat >> tag2.txt 
git tag -a v2.0.0 -m "version v2.0.0"
git show v2.0.0
git remote 
origin1
git push origin1 v1.0.0

git checkout v1.0.0
git checkout master
git switch master
git checkout v2.0.0
git switch master

git tag -d v1.0.0

-------------------------------------------------------------------------
BRANCH :
MERGE
Fast-Forward 
No Fast Forward 
Squash 

git add .
git commit -m "branch öncesi"
git push 

git branch --help 
git branch 
git branch -l 
git branch -a 
git branch -r 

# 1.BRANCH (Frontend)
git branch frontend
git checkout frontend
cat >> frontend.txt 
git add .
git commit -m "frontend data"
git remote 
git push origin1 frontend

git checkout master 
git switch master 
# fast forward 
git merge frontend
git log --decorate --oneline --graph --all 

# 2.BRANCH (Backend)
git checkout -b backend
cat >> backend.txt 
git add .
git commit -m "backend data"
git remote 
git push origin1 backend

git checkout master 
git switch master 
# no fast forward 
git merge --no-ff backend
git log --decorate --oneline --graph --all 

# 3.BRANCH (Backend)
git checkout -b webservices
cat >> webservices.txt 
git add .
git commit -m "webservices data"
git remote 
git push origin1 webservices

git checkout master 
git switch master 
# squash 
git merge squash backend
git commit -m "squash sonrasında son bir kez daha commit hakkı doğdu"
git log --decorate --oneline --graph --all 

REBASE
# 4.BRANCH (database)
git checkout -b database
cat >> database.txt 
git add .
git commit -m "database data"
git remote 
git push origin1 database

git checkout master 
git switch master 
# rebase 
git rebase database
git log --decorate --oneline --graph --all 

-------------------------------------------------------------------------


-------------------------------------------------------------------------


-------------------------------------------------------------------------